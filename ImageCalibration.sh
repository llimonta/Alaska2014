#!/bin/bash
#IMPORTANT RUN IT AS SUDO!!!!
#
# Required files: (NB Tab files depend on the one above)
# Having Astrometry installed and functioning
# ImageCalibration.sh
#	GrabFrame2Fits.m
#		RawDMCreader.m
#			GetRawInd.m
#	GetMagAndPixelsForBrightStars.m
#		StarPixelCount.m	
#
# We wanna cycle through the night and get all the bright stars to fit our image!
# First of all give an image to Astrometry to recongize it and have it printe the .wcs file
# Insert folder where the image is stored

START=100000;   #where you start your frame, the stacking will be centered around this frame, i.e. BegFrame-round(NFRAMES/2):BegFrame+rounds(NFRAMES/2)
NFRAMES=150;  # of frames you want to stack when doing analysis. Ideally frames=FrameRate*PixelArcseconds/2*1/(StarsSecondsDrift)
# star second drift is the angular drift of the star in the night sky ~ 360deg/86400 sec
END=1000000;  # where you end your frame
PASSO=20000;
day="Day31032014"; # the night you are analyzing
NightToBeAnalyzed="/media/limo/My Passport/2014-03-31/2014-03-31T06-12-CamSer7196.DMCdata"; #where the file being read is located
Folder="/home/limo/PHD/PokerFlat2014/AzDecImages"; # where are you storing all the files generated by the scripts 
TychoCataloguePath="/home/limo/PHD/astrometry.net-0.73/catalogs/tycho2.kd" # Where you have placed you Tycho Catalogue!!!
export PYTHONPATH=/usr/local/astrometry/lib/python


for (( c=$START; c<=$END; c=c+$PASSO ))
do
	BegFrame=$c;   # The frame aboud which you are doing the stacking
	echo "Reading Frame" $c
	BrightStarsAstroOutputFile="/home/limo/PHD/PokerFlat2014/AzDecImages/BrightStarsOutput"$BegFrame""$day".txt"; #where you are outputting the BrightStars detected by astrometry, you also feed it to matlab to find the location of the stars with their magnitude to be used for the calibration

	# Insert Name of the Image
	imageName="/Frame"$BegFrame$day".fits";
	dataName="/Frame"$BegFrame$day".mat";
	TableImageStars="/Frame"$BegFrame$day".wcs"; #wcs file with the stars found in the image
	SavedStars="/$BegFrame$Stars"$day".mat"; # this is where you save the stars for the days, it is used in the GetMagAndPixelForBrightStars where they are extracted in 						order to be used for the calibration, since it's been done Ntime we locally store them somewhere

	# Latitude in degrees [-90:90] of where you took the pic
	lat=65.116693 #PokerFlat
	# Longitutude in degrees [-180:180] of where you took the pic
	long=-147.48802209999997 #Poker Flat
	# tUTC in string format "YYYY/MM/DD hh:mm:ss"
	# Number of x pixels
	Xpixmin=1
	Xpixmax=512
	# Number of y pixels
	Ypixmin=1
	Ypixmax=512
	# Limiting magnitude of the Stars You hope to extract from the image
	LimitMag=9.5

	# Grabe the frame of interest and its time
	echo "Entering Matlab To Grab Frame"
	matlab -nodesktop -nosplash -nodisplay -r "GrabFrame2fits($BegFrame,$NFRAMES,'$NightToBeAnalyzed','$day','$Folder','$imageName','$dataName'); quit;"
	tUTCfilename=$Folder"/Frame"$BegFrame$day"Time.txt"
	#tUTC=`cat $Folder"/Frame"$BegFrame$day"Time".txt`
	echo "After Matlab"
	echo "Using astrometry to find field"

	# Call Astrometry solve fields to match image with night sky, N.B. there can be several interesting parameters that can be added, especially limitation on wher		e to look. N.B. Astrometry solves for Right Ascension and Declination
	# N.B. the images are stored in the same folder as where the original image
	solve-field $Folder$imageName --overwrite --tag-all

	#
	# Call astrometry to give you the frame and pixel location of any bright stars in your frame
	#
	echo "Finding the pixel location of any bright star in my field"
	echo "Frame*"$BegFrame"*" > $BrightStarsAstroOutputFile
	# Using Bright Stars catalogoue (it sucks)
#	plotann.py --brightcat ~/PHD/Astrometry/astrometry.net-0.50/catalogs/brightstars.fits $Folder$TableImageStars >>$BrightStarsAstroOutputFile
	# Using hd catalogue  (weird magnitudes)
#	plotann.py --hd /home/limo/PHD/Astrometry/astrometry.net-0.50/catalogs/hd.fits $Folder$TableImageStars >>$BrightStarsAstroOutputFile
	
	# Using tycho2 (best out of them all)
	echo "Tagging stars with Tych2 catalogue"
	plotann.py --tycho2cat $TychoCataloguePath $Folder$TableImageStars>>$BrightStarsAstroOutputFile --rd=RD
	echo "Grabbing Mag and Pixels For Bright Stars"
	matlab -nodesktop -nosplash -nodisplay -r "GetMagAndPixelsForBrightStars('$BrightStarsAstroOutputFile',$Xpixmax,$Ypixmax,$LimitMag,'$Folder$dataName','$Folder$SavedStars','$tUTCfilename',$lat,$long); quit;"
	# The following two lines remove the astrometry outputfiles and .dat output because otherwise you would clutter your folder!!!
	#

	#
	# GRAB AZ AND ELEVATION MATRICES FOR EACH MEAN FRAME, UNCOMMENT FROM HERE TO THE END OF THE FILE IF YOU WANNA DO THAT AS WELL
	#
	#Hoping/Assuming a succesfull match has been found by solve-fields let's call (don't remember what) which goes on converting each pixel to a txt file containing right ascension and declination. Unccomment the following lines, if beside the star brightness you want to also have the Azimuth and Elevation matrix
	
	echo 'Finding Pixel RA and DEC txt file'
	#./CallAstrometry2GrabRaDec.sh $Folder$imageName $Xpixmin $Ypixmin $Xpixmax $Ypixmax > /home/limo/PHD/PokerFlat2014/AzDecImages/outputfile.txt
	
	# Let's now extract all the weird outputted values by CallAstrometry2GrabRaDec into a nice txt matrix file. Remember the first n values are the values for x=1 and y=1:Ypixmax, then you will have x=2 y=1:Ypixmax and so on
	#echo 'putting into txt readable by matlab'
	#printf '%s\n' "$Folder" | ./CallCPP2conv2MatForm
	
	# Congratulation in making it so far now we call a matlab script to convert from RA and DEC to azimuth and elevation
	#echo $Folder
	#echo $imageName
	#echo 'Matlab'
	echo 'Converting to Az and El'
#	matlab -nodesktop -nosplash -nodisplay -r "GrabRaDecConvert2AzElforImageCalibration	('$Folder','$imageName','$Xpixmax','$Ypixmax','$lat','$long','$tUTCfilename'); quit;"
	#
	# END OF THE GRAB AZ AND ELEVATION PART
	#
	#rm -r $Folder"/Frame"$BegFrame$day*		
	#rm -r $Folder"/BrightStars"*	
	echo 'Computing Meteor Magnitude'
done

