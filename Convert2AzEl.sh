#!/bin/bash 
#IMPORTANT RUN IT AS SUDO!!!!
# NB you need to have astrometry installed on your laptop somewhere
# get it at -->> " http://astrometry.net/downloads/ "
# This allows you to run your fits image through astrometry and extract the x-y azimuth and elevation values for the image
# You need the following scripts:
#
# CallAstrometry2GrabRaDec.sh
# CallCPP2con2MatForm
# GrabRaDecConver2AzEl.m
# RaDec2AzEl.m
#

declare -i c
declare -i FrameSinceStart
declare -i MeteoroidNumber

# Latitude in degrees [-90:90] of where you took the pic
lat=65.116693
# Longitutude in degrees [-180:180] of where you took the pic
long=-147.48802209999997
# tUTC in string format "YYYY/MM/DD hh:mm:ss"
tUTC="2014/03/31 10:55:29"
# Number of x pixels
Xpixmin=1
Xpixmax=512
# Number of y pixels
Ypixmin=1
Ypixmax=512

START=76928;   #where you start your frame, the stacking will be centered around this frame, i.e. BegFrame-round(NFRAMES/2):BegFrame+rounds(NFRAMES/2)
	       #for our camera it's about 69 arcseconds/pixel --> ~ 100 
NFRAMES=0;  # of frames you want to stack when doing analysis. Ideally frames=FrameRate*PixelArcseconds/2*1/(StarsSecondsDrift)
# star second drift is the angular drift of the star in the night sky ~ 360deg/86400 sec
END=76932;  # where you end your frame
day="Day31032014"; # the night you are analyzing
NightToBeAnalyzed="/media/limo/My Passport/2014-03-31/2014-03-31T06-12-CamSer7196.DMCdata"; #where the file being read is located
Folder="/home/limo/PHD/PokerFlat2014/AzDecImages"; # where are you storing all the files generated by the scripts 
TychoCataloguePath="/home/limo/PHD/Astrometry/astrometry.net-0.50/catalogs/tycho2.kd" # Where you have placed you Tycho Catalogue!!!

kkk=1

for (( c=$START; c<=$END; c=c+1 ))
do
	BegFrame=$c;   # The frame aboud which you are doing the stacking
	BrightStarsAstroOutputFile="/home/limo/PHD/PokerFlat2014/AzDecImages/BrightStarsOutput"$BegFrame""$day".txt"; #where you are outputting the BrightStars detected by astrometry, you also feed it to matlab to find the location of the stars with their magnitude to be used for the calibration

	# Insert Name of the Image
	imageName="/Frame"$BegFrame$day".fits";
	dataName="/Frame"$BegFrame$day".mat";
	TableImageStars="/Frame"$BegFrame$day".wcs"; #wcs file with the stars found in the image
	SavedStars="/Stars"$day".mat"; # this is where you save the stars for the days, it is used in the GetMagAndPixelForBrightStars where they are extracted in 						order to be used for the calibration, since it's been done Ntime we locally store them somewhere

	# Grabe the frame of interest and its Time in Matlab Time Format
	matlab -nosplash -nodisplay -nodesktop -r "GrabFrame2fits($BegFrame,$NFRAMES,'$NightToBeAnalyzed','$day','$Folder','$imageName','$dataName'); quit;"
	tUTC=`cat $Folder"/Frame"$BegFrame$day"Time".txt`
	echo $tUTC

	# Call Astrometry solve fields to match image with night sky, N.B. there can be several interesting parameters that can be added, especially limitation on where to look. N.B. Astrometry solves for Right Ascension and Declination
	# N.B. the images are stored in the same folder as where the original image
	solve-field $Folder$imageName --overwrite

	# Call matlab to look up meteoroid to which this belongs to, find its Meteoroid{kkk}.KalLoc(iii) to find the respective RA, DEC and give it to 		
	# CallAstrometry2GrabRaDec.sh
	FrameSinceStart=$c-$START+1
	MeteoroidNumber=10-10+$kkk
	echo $FrameSinceStart
	echo $MeteoroidNumber
	matlab -nodesktop -nosplash -nodisplay -r "ReadMeteoroidKalLoc('$Folder','$BegFrame','$day',$MeteoroidNumber,$FrameSinceStart); quit;"
	Xpixmin=`cat $Folder"/Frame"$BegFrame$day"XpixelMeteoroidPosition.txt"`
	Ypixmin=`cat $Folder"/Frame"$BegFrame$day"YpixelMeteoroidPosition.txt"`
	echo $Xpixmin
	echo $Ypixmin
	
	if [ $Xpixmin != "NaN" ]&&[ $Ypixmin != "NaN" ]; then 	
	
		#Hoping/Assuming a succesfull match has been found by solve-fields let's call (don't remember what) which goes on converting each pixel to a txt file
		#containing right ascension and declination.
		#NB DO NOT CHANGE THE NAME OF THE OUTPUTE FILE  AS IT IS HARCODED IN CallCPP2conv2MatForm
		echo 'converting to txt file'
		# Uncomment if you want entire frame, with x/y pixmin/max given by size of camera
		#./CallAstrometry2GrabRaDec.sh $Folder$imageName $Xpixmin $Ypixmin $Xpixmax $Ypixmax > /home/limo/PHD/PokerFlat2014/AzDecImages/outputfile.txt
		# Using to get location of head
		./CallAstrometry2GrabRaDec.sh $Folder$imageName $Xpixmin $Ypixmin $Xpixmin $Ypixmin > /home/limo/PHD/PokerFlat2014/AzDecImages/outputfile.txt

		# Let's now extract all the weird outputted values by CallAstrometry2GrabRaDec into a nice txt matrix file. Remember the first n values are the 
		#values for x=1 and y=1:Ypixmax, then you will have x=2 y=1:Ypixmax and so on
		#echo 'putting into txt readable by matlab'
		printf '%s\n' "$Folder" "$BegFrame" | ./CallCPP2conv2MatForm
		echo "$tUTC" > $Folder"/"$BegFrame"Time".txt

		#Congratulation in making it so far now we call a matlab script to convert from RA and DEC to azimuth and elevation

		echo $imageFolder
		echo $imageName
		echo 'Matlab'

	#	matlab -nodesktop -nosplash -nodisplay -r "GrabRaDecConvert2AzEl('$Folder','$imageName','$Xpixmax','$Ypixmax','$lat','$long','$tUTC'); quit;"
	fi
done
